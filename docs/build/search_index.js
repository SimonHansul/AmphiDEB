var documenterSearchIndex = {"docs":
[{"location":"#AmphiDEB.jl","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"","category":"section"},{"location":"#Installation","page":"AmphiDEB.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"AmphiDEB depends on EcotoxSystems.jl, which is curently not registered.  Installation thus requires","category":"page"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"using Pkg\nPkg.add(url=\"htts://github.com/simonhansul/EcotoxSystems.jl\")\nPkg.add(url=\"htts://github.com/simonhansul/AmphiDEB\")","category":"page"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"Guided examples are given in the examples directory.","category":"page"},{"location":"#Notes-on-notation-and-terminology","page":"AmphiDEB.jl","title":"Notes on notation and terminology","text":"","category":"section"},{"location":"#Simplified-DEB-notation","page":"AmphiDEB.jl","title":"Simplified DEB notation","text":"","category":"section"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"For DEB-TKTD parameters and state variables,  we use a slightly simplified notation, following these rules:","category":"page"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"Leading capitalized character indicates a state variable\nX: External resource\nX_emb: Embryonic buffer\nI: Ingested resource\nA: Assimilates\nM: Somatic maintenance costs\nH: Maturity\nJ: Maturity maintenance costs\nR: Reproduction buffer\nk_X is a rate constant related to state variable X\neta_XY is the efficiency of transforming X into Y\nX_int is the initial value of X\ny_X indicates the response to X (e.g. chemical stressor or temperature). The relative response is always defined as a value that can be multiplied with the relevant term in the derivatives without further transformation.","category":"page"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"Furthermore, surface areas and volumes are only given up to a proportionality:","category":"page"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"surface area propto mass ^23\nvolume propto mass","category":"page"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"The zoom factor is based on the maximum structural masses of individuals.","category":"page"},{"location":"#Life-stage-specificity","page":"AmphiDEB.jl","title":"Life stage specificity","text":"","category":"section"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"Some parameters are life stage specific, indicated by suffixes _emb, _lrv, _mt, _juv, _ad. <br> The suffix indicates the life stage for which a switch in the value occurrs. <br> For example, we have values k_M_emb and k_M_juv, which means that k_M has the value k_M_emb for embryos, larvae and metamorphs,  and value k_M_juv for juveniles and adults.","category":"page"},{"location":"#Input-parameters","page":"AmphiDEB.jl","title":"Input parameters","text":"","category":"section"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"Listed below are the input parameters of the model (valid for v0.3.3). <br>  For guidance on how to use these, please consult the examples. <br> Please note that the default parameters are largely arbitrary and do not reflect a particular species.","category":"page"},{"location":"#Global-(glb)","page":"AmphiDEB.jl","title":"Global (glb)","text":"","category":"section"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"Parameter Default value Comment\nt_max 56. Maximum simulation time\nN0 1. Number of starting individuals\ndX_in [20., 20.] Food input rate [mg d⁻¹], assuming ad libitum feeding\nk_V [0., 0.] Dilution rate in the aquatic medium[d⁻¹]\nV_patch [1., 1.] Simulated volume and surface area of the aquatic and terrestic habitat, respectively\nT 293.15 Ambient temperature [K]\nC_W [0.;] Exposure concentrations (matrix: treatments × compounds)\npathogeninoculationdose 0. Pathogen spores added to medium [# spores]\npathogeninoculationtime 30. Time-point of pathogen inoculation [t]\nmedium_renewals [0.] Time-points for media renewals (removes spores)","category":"page"},{"location":"#Species-specific-(spc)","page":"AmphiDEB.jl","title":"Species-specific (spc)","text":"","category":"section"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"Parameter Default value Comment\nMetaparameters  \nZ Dirac(1.) zoom factor, based on maximum structural masses\npropagate.zoom.dImaxemb 1/3 dI ∝ Z^(1/3)\npropagate.zoom.dImaxlrv 1/3 \npropagate.zoom.dImaxjuv 1/3 \npropagate.zoom.Xembint 1. X_emb ∝ Z\npropagate.zoom.H_j1 1. H ∝ Z\npropagate.zoom.H_p 1. \npropagate.zoom.KXlrv 1/3 K_X ∝ dI ∝ Z^(1/3)\npropagate.zoom.KXjuv 1/3 \nPhysiological baseline (DEB)  \nXembint 1 Initial vitellus (≈ dry mass of an egg)\nKXlrv 1. Larval half-saturation constant for food uptake\nKXjuv 1. Juvenile/adult half-saturation constant for food uptake\ndImaxemb 1 Embryonic maximum specific ingestion rate\ndImaxlrv 1 Larval maximum specific ingestion rate\ndImaxjuv 1 Juvenile/adult maximum specific ingestion rate\nkappa_emb 0.8 Embryonic to metamorph allocation fraction\nkappa_juv 0.8 Juvenile/adult allocation fraction to soma\ngamma 0.5 Larval allocation to metamorphic reserves\neta_IA 0.54 Assimilation efficiency\netaASemb 0.4 Embryonic growth efficiency\netaASjuv 0.4 Juvenile/adult growth efficiency\neta_AR 0.95 Reproduction efficiency\neta_SA 0.8 Shrinking efficiency\nkMemb 0.11 Embryonic somatic maintenance rate\nkMjuv 0.11 Juvenile/adult somatic maintenance rate\nkJemb 0.027 Embryonic maturity maintenance rate\nkJjuv 0.027 Juvenile/adult maturity maintenance rate\nH_j1 1 Maturity at start of metamorphosis\nH_p 55. Maturity at puberty\nT_A 8000. Arrhenius temperature (K)\nT_ref 293.15 Reference temperature\nb_T 40. Temperature effect on resource allocation (cf. Romoli et al. (2025))\nTKTD Parameters  \nh_b 0. Background mortality\nKD [0. 0. 0. 0. 0. 0. 0.;] k_D per PMoA and stressor\nB [2. 2. 2. 2. 2. 2. 2.;] Slope parameters\nE [1e10 1e10 1e10 1e10 1e10 1e10 1e10;] Median effective damage per stressor and PMoA\nKD_h [0.;] k_D for GUTS-SD module per stressor\nE_h [1e10;] Sensitivity for GUTS-SD\nB_h [1.;] Slope for GUTS-SD\nC_h [1.;] Proportionqlity constant to convert larval sublethal response to post-metamorphic hazard rate\nSrelcrit 0.66 Critical relative body mass loss\nh_S 0.6 Hazard rate below critical mass\na_max truncated(Normal(15*365, 1.5*365), 0, Inf) Maximum age [d]\ntau_R 365. Reproduction period [d]\nPathogen effects  \nChi LogNormal(log(1)+1^2, 1) Killing rate modifier (log-normal with mode 1, σ=1)\nE_P [Inf, Inf, Inf, Inf] Sensitivity thresholds for pathogen effects\nB_P [2., 2., 2., 2.] Slope parameters for pathogen effects","category":"page"},{"location":"#Pathogens-(pth)","page":"AmphiDEB.jl","title":"Pathogens (pth)","text":"","category":"section"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"The model is adopted from Drawert et al. (2017). Default values are the averages of the suggested ranges.","category":"page"},{"location":"","page":"AmphiDEB.jl","title":"AmphiDEB.jl","text":"Parameter Default value Comment\ngamma geomean([1e-6, 1.]) Zoospore encounter rate [spores individual⁻¹ d⁻¹]\neta harmmean([5., 20.]) Zoospore production rate\nv0 0.5 Zoospore encystment rate\nf 0.5 Host reinfection fraction\nsigma0 harmmean([0.1, 0.5]) Sporangia killing rate\nsigma1 harmmean([0.1, 0.5]) Density-dependent killing rate\nmu harmmean([0.01, 1.5]) Zoospore death rate","category":"page"},{"location":"#API","page":"AmphiDEB.jl","title":"API","text":"","category":"section"},{"location":"#AmphiDEB.AmphiDEB_ODE_with_linear_TD!-NTuple{4, Any}","page":"AmphiDEB.jl","title":"AmphiDEB.AmphiDEB_ODE_with_linear_TD!","text":"AmphiDEB_ODE_with_linear_TD!(du, u, p, t)::Nothing\n\nODE system with linear toxicodynamics. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.AmphiDEB_ODE_with_loglogistic_TD!-NTuple{4, Any}","page":"AmphiDEB.jl","title":"AmphiDEB.AmphiDEB_ODE_with_loglogistic_TD!","text":"AmphiDEB_ODE_with_loglogistic_TD!(du, u, p, t)::Nothing\n\nODE system with log-logistic toxicodynamics. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.AmphiDEB_global_rules!-Tuple{Any}","page":"AmphiDEB.jl","title":"AmphiDEB.AmphiDEB_global_rules!","text":"AmphiDEB_global_rules!(m)\n\nGlobal rule-based portion of the AmphiDEB IBM. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.Amphibian_DEB!-NTuple{4, Any}","page":"AmphiDEB.jl","title":"AmphiDEB.Amphibian_DEB!","text":"Amphibian_DEB!(du, u, p, t)::Nothing\n\nThe default amphibian DEB model assumes a metamorphic reserve compartment, which is accumulated during larval development, and depleted during metamorphosis.  During metamorphosis, ingestion rate decreases gradually and reaches 0 at the end of metamorphosis.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.IBM_simulator-Tuple{ComponentArrays.ComponentVector}","page":"AmphiDEB.jl","title":"AmphiDEB.IBM_simulator","text":"IBM_simulator(\n    p::ComponentVector;\n\n    init_global_statevars = initialize_global_statevars,\n    global_ode! = AmphiDEB_global!,\n    global_rules! = AmphiDEB_global_rules!,\n    \n    init_individual_statevars = initialize_individual_statevars,\n    individual_ode! = AmphiDEB_individual_ODE_with_loglogistic_TD!, \n    individual_rules! = default_individual_rules!,\n    gen_ind_params = p -> EcotoxSystems.generate_individual_params(p; pth = p.pth),\n\n    kwargs...\n    )\n\nCompose and execute an individual-based simulation from the given components. <br> This function is a simple wrapper around EcotoxSystems.IBM_simulator. <br> Its main purpose is to provide a default configuration for the AmphiDEB model. \n\nPositional arguments\n\np: Parameters for all components: global (p.glb), Amphibian species-specific (p.spc) and pathogen-specific (p.pth)\n\nKeyword arguments\n\nSpecification of global part of the system\n\ninit_global_statevars: Function that initializes global state variables as ComponentVector, e.g. food abundance, temperature. \nglobal_ode!: Defintion of global ODE-based portion of the system (e.g. growth or experimental addition of food resource).\nglobal_rules!: Definition of global rule-based portion of the system (e.g. computing population aggregates).\n\nSpecification of species/individual-specific part of the system\n\ninit_individual_statevars: Function that initializes individual-level state variables as ComponentVector, e.g. structural mass, scaled adamge, etc.\nindividual_ode!: Definition of individual-level ODE-based portion of the system (e.g. derivatives of the DEB-TKTD module).\nindividual_rules!: Definition of individual-level rule-based portion of the system (e.g. death, discrete reproduction events).\ngen_ind_params: A function that converts species-specific parameters to individual-specific parameters. For parameters which are provided as distributions, this takes a random sample from the distribution each time an individual is generated. \n\nThis argument probably does not have to be changed, unless additional components (other than glb, spc and pth) are added to the system.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.ODE_simulator-Tuple{ComponentArrays.ComponentVector}","page":"AmphiDEB.jl","title":"AmphiDEB.ODE_simulator","text":"ODE_simulator(\n    p::ComponentVector; \n    model = AmphiDEB_ODE_M1!, \n    callbacks = AmphODE_callbacks(), \n    statevars_init = initialize_statevars,\n    kwargs...\n    )\n\nA wrapper around the EcotoxSystems.jl ODE_simulator  for application with the AmphiDEB model.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.TKTD_LL2!-NTuple{4, Any}","page":"AmphiDEB.jl","title":"AmphiDEB.TKTD_LL2!","text":"TKTD_LL2!(du, u, p, t)::Nothing\n\nTKTD model with following configuration: \n\nMixture toxicity based on independent action (IA)\nLog-logistic relationship between damage and metabolic processes\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.TKTD_linear!-NTuple{4, Any}","page":"AmphiDEB.jl","title":"AmphiDEB.TKTD_linear!","text":"TKTD_linear!(du, u, p, t)::Nothing\n\nTKTD model with following configuration: \n\nMixture toxicity based on independent action (IA)\nLinear-above-threshold relationship between damage and metabolic processes (the default DEBtox stress function)\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_H_eq_juv-Tuple{ComponentArrays.ComponentVector}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_H_eq_juv","text":"calc_H_eq_juv(spc::ComponentVector)\n\nCalculate equilibrium maturity for juvenile/adult stages. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_H_eq_lrv-Tuple{ComponentArrays.ComponentVector}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_H_eq_lrv","text":"calc_H_eq_lrv(spc::ComponentVector)\n\nCalculate equilibrium maturity for larval stage. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_S_B-Tuple{DataFrames.AbstractDataFrame}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_S_B","text":"calc_S_B(sim::AbstractDataFrame)\n\nExtracts structural mass at birth from simulation output. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_S_max_ad-Tuple{ComponentArrays.ComponentVector}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_S_max_ad","text":"calc_S_max_ad(spc::ComponentVector)\n\nAlias for calc_S_max_juv.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_S_max_juv-Tuple{ComponentArrays.ComponentVector}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_S_max_juv","text":"calc_S_max_juv(spc::ComponentVector)\n\nCalculates maximum structural mass of juveniles and adults from parameters. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_a_B-Tuple{DataFrames.AbstractDataFrame}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_a_B","text":"calc_a_B(sim::AbstractDataFrame)\n\nExtracts age at birth from simulation output. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_a_j1-Tuple{DataFrames.AbstractDataFrame}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_a_j1","text":"calc_a_j1(sim::AbstractDataFrame)\n\nExtract age at beginning of metamorphosis, j1, from simulation output. <br> Beginning of metamorphosis is defined as the point when feeding rates start to decline. <br> This can align with Gosner stage 42 for amphibians, but can also be as early as Gosner 38.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_a_j2-Tuple{DataFrames.AbstractDataFrame}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_a_j2","text":"calc_a_j2(sim::AbstractDataFrame)\n\nExtract age at the end of metamorphosis, based on depletion of metamorphic reserve. <br> Without providing an additional maturity threshold (and therefore an additional argument to this function),  this is the only plausible option we currently have.<br> In that case, the end of metamorphosis is reached when the reserve is depleted.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_a_j2-Union{Tuple{R}, Tuple{DataFrames.AbstractDataFrame, R}} where R>:Real","page":"AmphiDEB.jl","title":"AmphiDEB.calc_a_j2","text":"calc_a_j2(sim::AbstractDataFrame, H_j2)\n\nExtract age at the end of metamorphosis, based on a maturity threshold H_j2. <br>\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_dE_mt_lrv-NTuple{7, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_dE_mt_lrv","text":"calc_dE_mt_lrv(\n    eta_AS::Float64, \n    y_G::Float64,\n    y_G_P::Float64,\n    gamma::Float64,\n    kappa::Float64,\n    dA::Float64,\n    dM::Float64\n    )::Float64\n\nAccumulation of metamorphic reserve by larvae.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_dE_mt_mt-Tuple{Float64, Float64, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_dE_mt_mt","text":"calc_dE_mt_mt(\n    dH::Float64,\n    dJ::Float64,\n    dM::Float64\n    )::Float64\n\nDepletion of metamorphic reserve by metamorphs.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_dH-Tuple{Float64, Float64, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_dH","text":"calc_dH(\n    kappa::Float64,\n    dA::Float64,\n    dJ::Float64\n    )::Float64\n\nMaturation rate following standard DEBkiss model.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_dH_mt-Tuple{Float64, Float64, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_dH_mt","text":"calc_dH_mt(\n    kappa::Float64,\n    dM::Float64,\n    dJ::Float64\n    )::Float64\n\nMaturation rate for metamorphs, calculated from the κ-rule and assuming that soma are decoupled from the κ rule during metamorphosis.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_dI_emb-NTuple{4, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_dI_emb","text":"calc_dI_emb(\n    embryo::Float64,\n    S::Float64,\n    dI_max_emb::Float64,\n    y_T::Float64\n    )::Float64\n\nEmbryonic buffer uptake rate for embryos.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_dI_juv-NTuple{6, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_dI_juv","text":"calc_dI_juv(\n    juvenile::Float64,\n    adult::Float64,\n    f_X::Float64,\n    dI_max_juv::Float64,\n    S::Float64,\n    y_T::Float64\n    )::Float64\n\nFood ingestion rate for juveniles and adults.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_dI_lrv-NTuple{5, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_dI_lrv","text":"calc_dI_lrv(\n    larva::Float64,\n    f_X::Float64,\n    dI_max_lrv::Float64,\n    S::Float64,\n    y_T::Float64,\n    )::Float64\n\nFood ingestion rate for larvae. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_dI_mt-NTuple{7, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_dI_mt","text":"calc_dI_mt(\n    metamorph::Float64,\n    f_X::Float64,\n    dI_max_lrv::Float64,\n    E_mt::Float64,\n    E_mt_max::Float64,\n    S::Float64,\n    y_T::Float64\n    )::Float64\n\nResidual ingestion rate for metamorphs (if any). \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_dS_emb_juv_ad-NTuple{7, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_dS_emb_juv_ad","text":"calc_dS_emb_juv_ad(\n    kappa::Float64,\n    dA::Float64,\n    dM::Float64,\n    eta_SA::Float64,\n    y_G::Float64,\n    y_GP::Float64,\n    eta_AS::Float64\n    )::Float64\n\nSomatic growth rate for embryos, juveniles and adults,  including response to chemicals (y_G) and pathogens (y_GP).\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_dS_lrv-NTuple{8, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_dS_lrv","text":"calc_dS_lrv(\n    kappa::Float64,\n    dA::Float64,\n    dM::Float64,\n    eta_SA::Float64,\n    gamma::Float64,\n    eta_AS::Float64,\n    y_G::Float64,\n    y_GP::Float64\n    )::Float64\n\nSomatic growth rate for larvae.  Approach follows DEBkiss model, but with an additional γ-split to divert assimilates towards the metamorphic reserve.  This is also taken into account in the shrinking equation (kappa * dA < dM).\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_dS_mt-NTuple{5, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_dS_mt","text":"calc_dS_mt(\n    metamorph::Float64,\n    eta_AS::Float64,\n    y_G::Float64,\n    y_GP::Float64,\n    dA::Float64\n    )::Float64\n\nSomatic growth rate for metamorphs. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_eta_AS-NTuple{7, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_eta_AS","text":"calc_eta_AS(\n    embryo::Float64,\n    larva::Float64,\n    metamorph::Float64,\n    eta_AS_emb::Float64,\n    juvenile::Float64,\n    adult::Float64,\n    eta_AS_juv::Float64\n    )::Float64\n\nIndividual's current value of the growth efficiency eta_AS,  based on life stage indicators and life stage-specific values of eta_AS.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_kappa-NTuple{11, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_kappa","text":"calc_kappa(\n    embryo::Float64,\n    larva::Float64,\n    metamorph::Float64,\n    kappa_emb::Float64,\n    juvenile::Float64,\n    adult::Float64,\n    kappa_juv::Float64,\n    b_T::Float64, \n    T_ref::Float64,\n    y_K::Float64\n    )::Float64\n\nIndividual's current value of the growth efficiency kappa,  based on life stage indicators and life stage-specific values of kappa.\n\nThis includes temperature effects on κ as in Romoli et al. (2024).\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_metamorphosis_duration-Tuple{DataFrames.AbstractDataFrame}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_metamorphosis_duration","text":"calc_metamorphosis_duration(sim::AbstractDataFrame)\n\nCalculate duration of metamorphosis. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.calc_vB_growthrate_lrv-Tuple{ComponentArrays.ComponentVector}","page":"AmphiDEB.jl","title":"AmphiDEB.calc_vB_growthrate_lrv","text":"calc_vB_growthrate_lrv(spc::ComponentVector)::Float64\n\nCalculate larval von Bertalanffy growth rate.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.dA-NTuple{4, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.dA","text":"dA(\n    dI::Float64, \n    eta_IA::Float64, \n    y_A::Float64, \n    y_AP::Float64\n    )::Float64\n\nAssimilation flux, following standard DEBkiss model.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.dE_mt-NTuple{4, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.dE_mt","text":"dE_mt(\n    larva::Float64,\n    dE_mt_lrv::Float64,\n    metamorph::Float64,\n    dE_mt_mt::Float64\n    )::Float64\n\nLife stage-specific dynamics of the metamorphic reserve.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.dE_mt_max-Tuple{Float64, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.dE_mt_max","text":"dE_mt_max(\n    larva::Float64,\n    dE_mt::Float64\n    )::Float64\n\nFunction to record the maximum metamorphic reserve level, reached at the transition from larva to metamorph.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.dH-NTuple{4, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.dH","text":"dH(\n    adult::Float64,\n    metamorph::Float64,\n    dH::Float64,\n    dH_mt::Float64\n    )::Float64\n\nLife stage-specific maturation rate.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.dI-NTuple{4, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.dI","text":"dI(\n    dI_emb::Float64,\n    dI_mt::Float64, \n    dI_lrv::Float64, \n    dI_juv_ad::Float64\n    )::Float64\n\nFood ingestion rate with account for life stage-specificity.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.dJ-NTuple{5, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.dJ","text":"dM(\n    S::Float64,\n    k_M::Float64,\n    y_M::Float64,\n    y_MP::Float64,\n    y_T::Float64\n    )::Float64\n\nMaturity maintenance rates,  including response to chemicals (y_M), pathogens (y_MP) and temperature (y_T).\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.dM-NTuple{5, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.dM","text":"dM(\n    S::Float64,\n    k_M::Float64,\n    y_M::Float64,\n    y_MP::Float64,\n    y_T::Float64\n    )::Float64\n\nSomatic maintenance rate,  including response to chemicals (y_M), pathogens (y_MP) and temperature (y_T).\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.dP_S-NTuple{9, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.dP_S","text":"function dP_S(\n    v0::Float64,\n    gamma::Float64,\n    P_Z::Float64,\n    eta::Float64,\n    f::Float64,\n    P_S::Float64,\n    sigma0::Float64,\n    sigma1::Float64,\n    Chi::Float64\n    )::Float64\n\nDerivative of the individual-specific sporangia abundace P_S.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.dP_Z-Tuple{Float64, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.dP_Z","text":"function dP_Z(\n    mu::Float64,\n    P_Z::Float64\n    )::Float64\n\nDerivative of the zoospore abundance P_Z. \n\nThis function does not take changes in zoopsore abundance due to infection into account.  This is handled in Pathogen_Infection!.\n\nargs: \n\nmu: Zoospore background mortality rate\nP_Z`: Current zoospore abundance in the environment\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.dR-NTuple{7, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.dR","text":"dR(\n    adult::Float64,\n    eta_AR::Float64,\n    y_R::Float64,\n    y_RP::Float64,\n    kappa::Float64,\n    dA::Float64,\n    dJ::Float64\n    )::Float64\n\nReproduction rate, including response to chemicals y_R and pathogens (y_RP).\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.dS-NTuple{8, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.dS","text":"dS(\n    embryo::Float64,\n    juvenile::Float64,\n    adult::Float64,\n    dS_emb_juv_ad::Float64,\n    larva::Float64,\n    dS_lrv::Float64,\n    metamorph::Float64,\n    dS_mt::Float64\n    )::Float64\n\nLife stage-specific somatic growth rate.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.determine_k_J-NTuple{7, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.determine_k_J","text":"determine_k_J(\n    embryo::Float64,\n    larva::Float64,\n    metamorph::Float64,\n    k_J_emb::Float64,\n    juvenile::Float64,\n    adult::Float64,\n    k_J_juv::Float64\n    )::Float64\n\nCurrent value of k_J, depending on life stage.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.determine_k_M-NTuple{7, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.determine_k_M","text":"determine_k_M(\n    embryo::Float64,\n    larva::Float64,\n    metamorph::Float64,\n    k_M_emb::Float64,\n    juvenile::Float64,\n    adult::Float64,\n    k_M_juv::Float64\n    )::Float64\n\nCurrent value of k_M, depending on life stage.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.determine_life_stage!-NTuple{4, Any}","page":"AmphiDEB.jl","title":"AmphiDEB.determine_life_stage!","text":"determine_life_stage!(du, u, p, t)::Nothing\n\nDetermine an individual's current life stages by calculating all life stage indicators.  To avoid numerical issues during ODE solve, all life stage transitions are approximated by sigmoid functions.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.f_X-Tuple{Float64, Float64, Float64, Float64, Vector{Float64}, Union{Vector{Float64}, Vector{Real}}, Float64, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.f_X","text":"f_X(\n    larva::Float64,\n    metamorph::Float64, \n    juvenile::Float64, \n    adult::Float64,\n    X::Vector{Float64},\n    V_patch::Union{Vector{Real},Vector{Float64}}, \n    K_X_lrv::Float64,\n    K_X_juv::Float64\n    )::Float64\n\nScaled functional response with account for life stage-specific half saturation cosntant K_X.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.f_X-Tuple{Float64, Float64, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.f_X","text":"f_X(\n    X::Float64,\n    V_patch::Float64,\n    K_X::Float64\n    )::Float64\n\nScaled functional response f_X based on Holling Type II functional response.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.initialize_individual_statevars-Tuple{ComponentArrays.ComponentVector}","page":"AmphiDEB.jl","title":"AmphiDEB.initialize_individual_statevars","text":"\"     initializeindividualstatevars(p::ComponentVector; kwargs...)::ComponentVector\n\nInitialize individual-level state variables for the AmhpiDEB model.  Additional states can be added via kwargs.  If existing states are provided via kwargs, these will be overwritten.\n\nIMPORTANT NOTE FOR SIMULATING MIXTURES:  You can simulate an arbitrary number of chemical stressors,  but it is currently not possible to dynamically change the shape of vectors and matrices contained in a ComponentVector.  In practice, this means: If you want to simulate mixtures, you cannot simply provide the parameters as kwargs to this function,  but the entire ComponentVector has to be re-defined.  You can do so by copy-pasting the definition body of this function and changing the shape of y_j.  The same is true for the parameter vector, where the shape of all TKTD parameters has to be adjusted.  An example is given in the unit tests of the EcotoxSystems package: https://github.com/SimonHansul/EcotoxSystems.jl/blob/main/test/test05_mixtures.jl For application to the AmphiDEB model, we have to take into account that it has an additional PMoA, and therefore an additional column in the sublethal TKTD parameters.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.is_adult-Tuple{Float64, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.is_adult","text":"is_adult(\n    H::Float64,\n    H_p::Float64;\n    beta = 1e3\n    )::Float64\n\nDetermine wheter an individual is in adult state, returning life stage indicator as float. Adults are individuals with a maturity level above the puberty threshold H_p.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.is_embryo-Tuple{Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.is_embryo","text":"is_embryo(\n    X_emb::Float64;\n    beta::Float64 = 1e3\n    )::Float64\n\nDetermine whether an individual is in embryonic state, returning life stage indicator as float.  Following rules of the standard DEBkiss model, embryonic state is maintained until the embryonic buffer is emptied (X_emb_int=0).\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.is_juvenile-NTuple{6, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.is_juvenile","text":"is_juvenile(\n    H::Float64,\n    H_j1::Float64,\n    y_H_neg::Float64,\n    y_H_pos::Float64,\n    E_mt::Float64,\n    H_p::Float64;\n    beta1 = 1e3,\n    beta2 = 1e3,\n    beta3 = 1e3\n    )::Float64\n\nDetermine wheter an individual is in juvenile state, returning life stage indicator as float. Juveniles are individuals with a maturity level between H_j1 and H_p whose metamorphic reserve E_mthas been emptied.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.is_larva-NTuple{5, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.is_larva","text":"is_larva(\n    X_emb::Float64,\n    H::Float64,\n    H_j1::Float64,\n    y_H_neg::Float64, \n    y_H_pos::Float64;\n    beta1::Float64 = 1e3,\n    beta2::Float64 = 1e7\n    )::Float64\n\nDetermine wheter an individual is in larval state, returning life stage indicator as float.  Larvae are all non-embryos whose maturity is below the threshold for metamorphosis H_j1.  The timing of H_j1 will often be aligned with Gosner stage 42 for anurans, but might ocurr earlier.  The decisive factor is the decline in feeding rates.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.is_metamorph-NTuple{5, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.is_metamorph","text":"is_metamorph(\n    H::Float64, \n    H_j1::Float64, \n    y_H_neg::Float64,\n    y_H_pos::Float64,\n    E_mt::Float64;\n    beta1::Float64 = 1e7, \n    beta2::Float64 = 1e3, \n    )::Float64\n\nDetermine wheter an individual is in metamorph state, returning life stage indicator as float. Metamorphs have a maturity level above `H_j1, and their metamorphic reserve E_mt is not emptied yet.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.life_stage_and_plasticity_effects-NTuple{4, Any}","page":"AmphiDEB.jl","title":"AmphiDEB.life_stage_and_plasticity_effects","text":"life_stage_and_plasticity_effects(du, u, p, t)::Tuple{Float64,Float64}\n\nLife-stage specificity of parameters., as well as plastic responses to environmental factors (e.g. effect of temperature on κ).\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.minimal_TK_aquatic-NTuple{4, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.minimal_TK_aquatic","text":"minimal_TK_aquatic(\n    larva::Float64,\n    k_D::Float64, \n    C_W::Float64,\n    D::Float64\n    )::Float64\n\nMinimal TK model (no feedbacks) for aquatic exposure.  Only applies to larvae.\n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.temperature_sinusoidal-NTuple{4, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.temperature_sinusoidal","text":"temperature_sinusoidal(t::Float64, T_max::Float64, T_min::Float64, t_peak ::Float64)::Float64\n\nCalculate seasonal fluctuations in temperature from a sinusoidal function. \n\n\n\n\n\n","category":"method"},{"location":"#AmphiDEB.y_T-Tuple{Float64, Float64, Float64}","page":"AmphiDEB.jl","title":"AmphiDEB.y_T","text":"y_T(\n    T_A::Float64,\n    T_ref::Float64,\n    T::Float64\n    )::Float64\n\nTemperature correction coefficient y_T according to Arrhenius equation.\n\n\n\n\n\n","category":"method"}]
}
